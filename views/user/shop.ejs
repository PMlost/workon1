<!-- Start Content -->

<div class="container py-5">
  <div class="row">
    <div class="col-lg-3">
      <h1 class="h2 pb-4">Categories</h1>

      <div
        style="background-color: rgb(33, 33, 33); border-radius: 20px"
        class="p-4 mb-30"
      >
        <form style="color: white" action="/shop">
          <% categoryArray.forEach((category,index)=>{ %> <%
          if(category.isAvailable ){%>
          <div class="form-check">
            <input
              class="category form-check-input"
              type="checkbox"
              value="<%= index %>"
              name="category"
              onchange="update()"
            />
            <label class="form-check-label" for="flexRadioDefault1">
              <%=category.name %>
            </label>
          </div>
          <% }%> <%}) %>

          <div
            class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-1"
          ></div>
        </form>
      </div>
    </div>

    <div class="col-lg-9">
      <!-- //filter -->
      <div class="row">
        <div class="col-md-3">
          <!-- //sort -->
          <div class="d-flex">
            <select
              class="form-control"
              name="limit"
              id="limit"
              onchange="update()"
            >
              <option value="12">Show: All</option>
              <option value="3">Show: 3</option>
              <option value="6">Show: 6</option>
              <option value="9">Show: 9</option>
            </select>
          </div>
        </div>
        <div class="col-md-3 pb-4">
          <div class="d-flex">
            <select
              class="form-control"
              onchange="update()"
              name="sort"
              id="sort"
            >
              <option value="0">Sort By: Latest Arrivals</option>
              <option value="1">Sort By: Lowest Price</option>
              <option value="-1">Sort By: Highest Price</option>
            </select>
          </div>
        </div>

        <div class="col-md-4 pb-4">
          <div>
            <div class="input-group">
              <input
                type="text"
                class="form-control"
                placeholder="Search"
                name="search"
                id="search"
                onkeyup="update()"
              />
            </div>
          </div>
        </div>
      </div>
      <!-- //filter end -->

      <div class="row product-row">
        <div class="row product-row">
          <!-- product list -->
          <% if(locals.products ){%> <% products.forEach((product, index) => {%>
          <% let category = categoryArray.find(cat => cat.name ===
          product.category);%> <% if(category && category.isAvailable &&
          !product.isDeleted && product.stock != 0){%> <% if (index % 3 ===0 &&
          index !== 0) { %>
        </div>
        <div class="row">
          <% } %>
          <div class="col-md-4">
            <!-- Your existing card code -->
            <div class="card mb-4 product-wap rounded-0">
              <div class="card rounded-0">
                <img
                  class="card-img rounded-0 img-fluid"
                  src="<%= product.imgSrc[0] %>"
                />
                <div
                  class="card-img-overlay rounded-0 product-overlay d-flex align-items-center justify-content-center"
                >
                  <ul class="list-unstyled">
                    <li>
                      <a
                        class="btn btn-success text-white add-wishlist"
                        data-product-id="<%= (product._id) %>"
                        ><i class="far fa-heart"></i
                      ></a>
                    </li>
                    <li>
                      <a
                        class="btn btn-success text-white mt-2"
                        href="/users/view-product?id=<%=(product._id)%>"
                        ><i class="far fa-eye"></i
                      ></a>
                    </li>
                    <li>
                      <a
                        class="btn btn-success text-white mt-2 add-to-cart-btn"
                        data-product-id="<%= (product._id) %>"
                      >
                        <i class="fas fa-cart-plus"></i>
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
              <div class="card-body">
                <strong><%= product.name %></strong>
                <ul
                  class="w-100 list-unstyled d-flex justify-content-between mb-0"
                >
                  <li class="pt-2">
                    <span
                      class="product-color-dot color-dot-red float-left rounded-circle ml-1"
                    ></span>
                    <span
                      class="product-color-dot color-dot-blue float-left rounded-circle ml-1"
                    ></span>
                    <span
                      class="product-color-dot color-dot-black float-left rounded-circle ml-1"
                    ></span>
                    <span
                      class="product-color-dot color-dot-light float-left rounded-circle ml-1"
                    ></span>
                    <span
                      class="product-color-dot color-dot-green float-left rounded-circle ml-1"
                    ></span>
                  </li>
                </ul>
                <ul class="list-unstyled d-flex justify-content-center mb-1">
                  <li>
                    <i class="text-warning fa fa-star"></i>
                    <i class="text-warning fa fa-star"></i>
                    <i class="text-warning fa fa-star"></i>
                    <i class="text-muted fa fa-star"></i>
                    <i class="text-muted fa fa-star"></i>
                  </li>
                </ul>
                <p class="text-center mb-0"><%= 'â‚¹'+product.price %></p>
              </div>
            </div>
          </div>
          <% }%> <%})%> <% }%>
        </div>
      </div>
    </div>
    <!-- End Content -->
  </div>

  <div class="row">
    <ul class="pagination pagination-lg justify-content-end">
      <% for(let i = 1; i <= totalPages; i++) { %>
      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
        <a
          class="page-link rounded-0 mr-3 shadow-sm border-top-0 border-left-0"
          onclick="updatePage('<%-i%>')"
          ><%= i %></a
        >
      </li>
      <% } %>
    </ul>
  </div>

  <!-- //toastr -->
  <script
    defer
    src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"
  ></script>
  <!-- //script of adding cart quantity -->
  <script defer>
    document.querySelectorAll(".add-to-cart-btn").forEach((button) => {
      button.addEventListener("click", function (e) {
        const productId = this.dataset.productId;

        if (productId) {
          axios
            .post("/users/addToCart", { productId })
            .then((response) => {
              if (response.data.success) {
                const totalQuantity = response.data.totalQuantity;
                document.querySelector(".cart-total-count").textContent =
                  totalQuantity;
                toastr.success(
                  "Product added to cart successfully!",
                  "Success"
                );
              } else {
                toastr.error(response.data.message, "user not signed in ");
              }
            })
            .catch((error) => {
              toastr.error("Error adding product to cart.", "Error");
              console.error("Error adding to cart:", error);
            });
        }
      });
    });
    //wislist toaster message

    document.querySelectorAll(".add-wishlist").forEach((button) => {
      button.addEventListener("click", function (e) {
        const productId = this.dataset.productId;
        e.preventDefault();

        if (productId) {
          axios
            .post("/users/add-wishlist", { productId })
            .then((response) => {
              if (response.data.success) {
                toastr.success(response.data.message);
                // window.location.href = "/users/shop";
              } else {
                toastr.error(response.data.message, "user not signed in ");
              }
            })
            .catch((error) => {
              toastr.error("Error adding product to wislist.", "Error");
              console.error("Error adding to cart:", error);
            });
        }
      });
    });

    //pagination

    function updatePage(pageNumber) {
      page = pageNumber;

      update();
    }

    let page = document.querySelector(".page-item");
    let previousLimit = null;

    // sort
    function update() {
      var limit = document.getElementById("limit").value;
      let sort = document.getElementById("sort").value;
      let categoryCheckboxes = document.querySelectorAll(".category");
      let search = document.getElementById("search").value;

      let selectedCategories = [];

      categoryCheckboxes.forEach((checkbox, index) => {
        if (checkbox.checked) {
          selectedCategories.push(index);
        }
      });

      //check for reseting limits
      if (limit !== previousLimit) {
        page = 1;
        previousLimit = limit;
      }

      axios
        .get("/users/shop", {
          params: {
            limit: limit,
            sort: sort,
            search: search,
            category: selectedCategories,
            page: page,
            ajax: true,
          },
        })
        .then(function (response) {
          // handle success
          var products = response.data.products;
          var productContainer = document.querySelector(".product-row");
          productContainer.innerHTML = "";

          products.forEach(function (product, index) {
            var productHTML = `
         <div class="col-md-4">
           <!-- Your existing card code -->


           <div class="card mb-4 product-wap rounded-0">
             <div class="card rounded-0">
               <img
                 class="card-img rounded-0 img-fluid"
                 src="${product.imgSrc[0]}"
               />
               <div
                 class="card-img-overlay rounded-0 product-overlay d-flex align-items-center justify-content-center"
               >
                 <ul class="list-unstyled">
                   <li>
                     <a
                       class="btn btn-success text-white add-wishlist"
                       data-product-id=" ${product._id}"
                       ><i class="far fa-heart"></i
                     ></a>
                   </li>
                   <li>
                     <a
                       class="btn btn-success text-white mt-2"
                       href="/users/view-product?id= ${product._id}"
                       ><i class="far fa-eye"></i
                     ></a>
                   </li>
                   <li>
                     <a
                       class="btn btn-success text-white mt-2 add-to-cart-btn"
                       data-product-id=" ${product._id}"
                     >
                       <i class="fas fa-cart-plus"></i>
                     </a>
                   </li>
                 </ul>
               </div>
             </div>
             <div class="card-body">
               <strong> ${product.name}</strong>
               <ul
                 class="w-100 list-unstyled d-flex justify-content-between mb-0"
               >
                 <li class="pt-2">
                   <span
                     class="product-color-dot color-dot-red float-left rounded-circle ml-1"
                   ></span>
                   <span
                     class="product-color-dot color-dot-blue float-left rounded-circle ml-1"
                   ></span>
                   <span
                     class="product-color-dot color-dot-black float-left rounded-circle ml-1"
                   ></span>
                   <span
                     class="product-color-dot color-dot-light float-left rounded-circle ml-1"
                   ></span>
                   <span
                     class="product-color-dot color-dot-green float-left rounded-circle ml-1"
                   ></span>
                 </li>
               </ul>
               <ul class="list-unstyled d-flex justify-content-center mb-1">
                 <li>
                   <i class="text-warning fa fa-star"></i>
                   <i class="text-warning fa fa-star"></i>
                   <i class="text-warning fa fa-star"></i>
                   <i class="text-muted fa fa-star"></i>
                   <i class="text-muted fa fa-star"></i>
                 </li>
               </ul>
               <p class="text-center mb-0"> ${"â‚¹" + product.price}</p>
             </div>
           </div>

         </div>

       `;
            // If it's the end of a row, close the row div and start a new one
            if ((index + 1) % 3 === 0) {
              productHTML += '</div><div class="row">';
            }

            // Append the product HTML to the product container
            productContainer.innerHTML += productHTML;
          });

          //generate pagination
          var paginationContainer = document.querySelector(".pagination");
          paginationContainer.innerHTML = ""; // Clear existing pagination

          for (let i = 1; i <= response.data.totalPages; i++) {
            var isActive = page === i ? "active" : "";
            var pageItemHTML = `
    <li class="page-item ${isActive}">
      <a class="page-link rounded-0 mr-3 shadow-sm border-top-0 border-left-0" onclick="updatePage(${i})">${i}</a>
    </li>
  `;
            paginationContainer.innerHTML += pageItemHTML;
          }
        })
        //end pagination
        .catch(function (error) {
          // handle error
          console.log(error);
        });
    }
  </script>
</div>
